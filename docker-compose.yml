version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: surveyflow
      POSTGRES_USER: surveyflow
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U surveyflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=surveyflow
      - DB_PASSWORD=password
      - DB_DATABASE=surveyflow
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-here
      - JWT_REFRESH_EXPIRES_IN=7d
      - AWS_ACCESS_KEY_ID=your-aws-access-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret-key
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=surveyflow-uploads
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-app-password
      - FROM_EMAIL=noreply@surveyflow.com
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api/v1
      - NEXT_PUBLIC_APP_NAME=SurveyFlow
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
